[
  {
    "objectID": "my_trabajo_BigData.html",
    "href": "my_trabajo_BigData.html",
    "title": "Análisis general de las regiones de España",
    "section": "",
    "text": "###INTRODUCCIÓN\nEn la asignatura “Programación y manejo de datos en la era del Big Data”, debíamos crear dos trabajos distintos: Uno por equipos y uno grupal para así mostrar lo aprendido durante todo el año.\nComo el tema era completamente libre, nosotros elegimos un tema muy general como es el análisis de las regiones de España y asi poder sacar datos de cualquier idea que se nos pasase en ese momento por la cabeza.\nEl trabajo lo hemos dividido en 2 partes:\nLa primera consta sobre la demografía Española, viendo las diferencias de población entre los hombres y mujeres, los diferentes rangos de edad y las provincias mas pobladas.\nLa segunda parte ya es relacionada con la economía española, ya que hablaremos sobre el PiB nominal, la diferencia salarial entre hombres y mujeres, como se distribuye el trabajo y la pobreza en España.\n###DATOS\nPara los datos, empezamos cogiéndolos del Kaggle pero la forma con la que se descargaban y/o se abrían no era la correcta para nuestro nivel de R. Es por eso, que decidimos pasar a datos del INE y aunque al inicio nos costaba un poco abrir los datos de la forma correcta, vimos una forma de descargar los datos llamada PC.Axis. Esta a través del paquete pxR, nos abría los datos directamente en el R studio con el formato adecuado y bien estructuradas las columnas. También estaba la forma de descargarlos por CSV o por Excel, y aunque esta forma está dada en clase, la forma en la que se detectaban las variables nos hacía imposible el poder usar algunas columnas de forma numérica, asi que recomendamos el uso de PC.Axis.\nLos datos se pueden cargar en la memoria de de R/RStudio de esta forma:\n\n\nCódigo\n#TODOS LOS PAQUETES QUE VAMOS A UTILIZAR\n\nlibrary(tidyverse)\nlibrary(pxR) #install.packages(\"pxR\")\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(gganimate)\nlibrary(magick)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(sf)\nlibrary(tidyr)\nlibrary(countrycode)\nlibrary(ggmap)\nlibrary(ggthemes)\nlibrary(mapSpain)\nlibrary(ggrepel)\nlibrary(readxl)\nlibrary(eurostat)\nlibrary(lubridate)\nlibrary(tmap)\nlibrary(ggthemes)\nlibrary(readxl)\nlibrary(gapminder)\nlibrary(ggbump)\nlibrary(plyr)\nlibrary(naniar)\nlibrary(ggrepel)\nlibrary(patchwork)\nlibrary(vembedr)\nlibrary(conflicted)\nlibrary(lubridate)\nlibrary(gtsummary)\n\nconflict_prefer(\"filter\",\"dplyr\")\nconflict_prefer(\"mutate\",\"dplyr\")\nconflict_prefer(\"rename\",\"dplyr\")\nconflict_prefer(\"arrange\",\"dplyr\")\nconflict_prefer(\"summarise\",\"dplyr\")\nconflict_prefer(\"summarize\",\"dplyr\")\nconflict_prefer(\"layout\",\"plotly\")\n\n# CARGAMOS LOS DATOS QUE POSTERIORMENTE TRANSFORMAREMOS PARA PODER ANALIZARLOS MEJOR\nmy_url &lt;- \"https://github.com/perezp44/pjpv.datos.01/raw/master/data/pob_muni_1996_2020.rda\"\nmy_destination &lt;- here::here(\"datos\", \"pob_mun_1996_2020.rda\") #- datos\ncurl::curl_download(url = my_url,  destfile = my_destination)  #- descarga\ndf &lt;- rio::import(my_destination) #- importamos\n\n\ndf_ccaa &lt;- df %&gt;%  \n  group_by(year, ine_ccaa.n) %&gt;%      #- agrupamos tb x año\n  summarise(Pob_CCAA = sum(pob_total, na.rm = TRUE)) %&gt;%   #- cuidado con na.rm = FALSE\n  ungroup()\n\ndf_prov &lt;- df %&gt;%  \n  group_by(year, ine_prov.n) %&gt;%    \n  summarise(Pob_CCAA = sum(pob_total, na.rm = TRUE)) %&gt;%\n  ungroup()\n\ndf_salarios_CCAA &lt;- pxR::read.px(\"./datos/salarios_CCAA.px\") %&gt;% as.data.frame\n\nsalarios_diferencia_genero &lt;- pxR::read.px(\"./datos/salarios_hombres_mujeres.px\") %&gt;% as.data.frame\n\ndf_pibn &lt;- pxR :: read.px(\"./datos/01001.px\") %&gt;% as.data.frame()\n\ndf_pibn &lt;- df_pibn %&gt;% rename(actividad = Ramas.de.actividad)\ndf_pibn &lt;- df_pibn %&gt;% rename(CCAA = Comunidades.y.ciudades.autónomas)\n\ndf_pibn$periodo &lt;- as.numeric(as.character(df_pibn$periodo))\ndf_pibn$CCAA &lt;- as.character(df_pibn$CCAA)\ndf_pibn$Magnitud &lt;- as.character(df_pibn$Magnitud)\ndf_pibn$actividad &lt;- as.character(df_pibn$actividad)\n\ndf_pibn &lt;- df_pibn %&gt;%\n  mutate(CCAA = ifelse(CCAA == \"Total Nacional\",\n                       paste(\"00\", CCAA),\n                       CCAA))\ndf_pibn &lt;- df_pibn %&gt;%\n  tidyr::separate(CCAA, sep = \" \",\n                  into = c(\"ine_ccaa\", \"ine_ccaa.n\"), extra = \"merge\")\n\ndf_activ_pib &lt;- df_pibn %&gt;%\n  filter(actividad == \"PRODUCTO INTERIOR BRUTO A PRECIOS DE MERCADO\")\n\ndf_pib_valor &lt;- df_activ_pib %&gt;%\n  filter(Magnitud == \"Valor\")\n\ndf_pib_ccaa &lt;- df_pib_valor %&gt;%\n  filter(actividad == \"PRODUCTO INTERIOR BRUTO A PRECIOS DE MERCADO\") %&gt;%\n  filter(periodo != \"NA\") %&gt;%\n  select(-c(Magnitud, actividad))\ndf_ccaa_2016 &lt;- df_pib_ccaa %&gt;% filter(periodo == min(periodo, na.rm = TRUE))\n\n\ndf_Sectores &lt;- pxR::read.px(\"./datos/3994.px\") %&gt;% as.data.frame\ndf_Sectores &lt;- janitor::clean_names(df_Sectores) \ndf_Nacimiento &lt;- pxR::read.px(\"./datos/6567.px\") %&gt;% as.data.frame\ndf_Nacimiento &lt;- janitor::clean_names(df_Nacimiento)\ndf_Vegetativo &lt;- pxR::read.px(\"./datos/6567.px\") %&gt;% as.data.frame\ndf_Vegetativo &lt;- janitor::clean_names(df_Vegetativo) \ndf_Turismo &lt;- pxR::read.px(\"./datos/02001.px\") %&gt;% as.data.frame"
  },
  {
    "objectID": "my_trabajo_BigData.html#introducción-y-datos",
    "href": "my_trabajo_BigData.html#introducción-y-datos",
    "title": "Análisis general de las regiones de España",
    "section": "",
    "text": "###INTRODUCCIÓN\nEn la asignatura “Programación y manejo de datos en la era del Big Data”, debíamos crear dos trabajos distintos: Uno por equipos y uno grupal para así mostrar lo aprendido durante todo el año.\nComo el tema era completamente libre, nosotros elegimos un tema muy general como es el análisis de las regiones de España y asi poder sacar datos de cualquier idea que se nos pasase en ese momento por la cabeza.\nEl trabajo lo hemos dividido en 2 partes:\nLa primera consta sobre la demografía Española, viendo las diferencias de población entre los hombres y mujeres, los diferentes rangos de edad y las provincias mas pobladas.\nLa segunda parte ya es relacionada con la economía española, ya que hablaremos sobre el PiB nominal, la diferencia salarial entre hombres y mujeres, como se distribuye el trabajo y la pobreza en España.\n###DATOS\nPara los datos, empezamos cogiéndolos del Kaggle pero la forma con la que se descargaban y/o se abrían no era la correcta para nuestro nivel de R. Es por eso, que decidimos pasar a datos del INE y aunque al inicio nos costaba un poco abrir los datos de la forma correcta, vimos una forma de descargar los datos llamada PC.Axis. Esta a través del paquete pxR, nos abría los datos directamente en el R studio con el formato adecuado y bien estructuradas las columnas. También estaba la forma de descargarlos por CSV o por Excel, y aunque esta forma está dada en clase, la forma en la que se detectaban las variables nos hacía imposible el poder usar algunas columnas de forma numérica, asi que recomendamos el uso de PC.Axis.\nLos datos se pueden cargar en la memoria de de R/RStudio de esta forma:\n\n\nCódigo\n#TODOS LOS PAQUETES QUE VAMOS A UTILIZAR\n\nlibrary(tidyverse)\nlibrary(pxR) #install.packages(\"pxR\")\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(gganimate)\nlibrary(magick)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(sf)\nlibrary(tidyr)\nlibrary(countrycode)\nlibrary(ggmap)\nlibrary(ggthemes)\nlibrary(mapSpain)\nlibrary(ggrepel)\nlibrary(readxl)\nlibrary(eurostat)\nlibrary(lubridate)\nlibrary(tmap)\nlibrary(ggthemes)\nlibrary(readxl)\nlibrary(gapminder)\nlibrary(ggbump)\nlibrary(plyr)\nlibrary(naniar)\nlibrary(ggrepel)\nlibrary(patchwork)\nlibrary(vembedr)\nlibrary(conflicted)\nlibrary(lubridate)\nlibrary(gtsummary)\n\nconflict_prefer(\"filter\",\"dplyr\")\nconflict_prefer(\"mutate\",\"dplyr\")\nconflict_prefer(\"rename\",\"dplyr\")\nconflict_prefer(\"arrange\",\"dplyr\")\nconflict_prefer(\"summarise\",\"dplyr\")\nconflict_prefer(\"summarize\",\"dplyr\")\nconflict_prefer(\"layout\",\"plotly\")\n\n# CARGAMOS LOS DATOS QUE POSTERIORMENTE TRANSFORMAREMOS PARA PODER ANALIZARLOS MEJOR\nmy_url &lt;- \"https://github.com/perezp44/pjpv.datos.01/raw/master/data/pob_muni_1996_2020.rda\"\nmy_destination &lt;- here::here(\"datos\", \"pob_mun_1996_2020.rda\") #- datos\ncurl::curl_download(url = my_url,  destfile = my_destination)  #- descarga\ndf &lt;- rio::import(my_destination) #- importamos\n\n\ndf_ccaa &lt;- df %&gt;%  \n  group_by(year, ine_ccaa.n) %&gt;%      #- agrupamos tb x año\n  summarise(Pob_CCAA = sum(pob_total, na.rm = TRUE)) %&gt;%   #- cuidado con na.rm = FALSE\n  ungroup()\n\ndf_prov &lt;- df %&gt;%  \n  group_by(year, ine_prov.n) %&gt;%    \n  summarise(Pob_CCAA = sum(pob_total, na.rm = TRUE)) %&gt;%\n  ungroup()\n\ndf_salarios_CCAA &lt;- pxR::read.px(\"./datos/salarios_CCAA.px\") %&gt;% as.data.frame\n\nsalarios_diferencia_genero &lt;- pxR::read.px(\"./datos/salarios_hombres_mujeres.px\") %&gt;% as.data.frame\n\ndf_pibn &lt;- pxR :: read.px(\"./datos/01001.px\") %&gt;% as.data.frame()\n\ndf_pibn &lt;- df_pibn %&gt;% rename(actividad = Ramas.de.actividad)\ndf_pibn &lt;- df_pibn %&gt;% rename(CCAA = Comunidades.y.ciudades.autónomas)\n\ndf_pibn$periodo &lt;- as.numeric(as.character(df_pibn$periodo))\ndf_pibn$CCAA &lt;- as.character(df_pibn$CCAA)\ndf_pibn$Magnitud &lt;- as.character(df_pibn$Magnitud)\ndf_pibn$actividad &lt;- as.character(df_pibn$actividad)\n\ndf_pibn &lt;- df_pibn %&gt;%\n  mutate(CCAA = ifelse(CCAA == \"Total Nacional\",\n                       paste(\"00\", CCAA),\n                       CCAA))\ndf_pibn &lt;- df_pibn %&gt;%\n  tidyr::separate(CCAA, sep = \" \",\n                  into = c(\"ine_ccaa\", \"ine_ccaa.n\"), extra = \"merge\")\n\ndf_activ_pib &lt;- df_pibn %&gt;%\n  filter(actividad == \"PRODUCTO INTERIOR BRUTO A PRECIOS DE MERCADO\")\n\ndf_pib_valor &lt;- df_activ_pib %&gt;%\n  filter(Magnitud == \"Valor\")\n\ndf_pib_ccaa &lt;- df_pib_valor %&gt;%\n  filter(actividad == \"PRODUCTO INTERIOR BRUTO A PRECIOS DE MERCADO\") %&gt;%\n  filter(periodo != \"NA\") %&gt;%\n  select(-c(Magnitud, actividad))\ndf_ccaa_2016 &lt;- df_pib_ccaa %&gt;% filter(periodo == min(periodo, na.rm = TRUE))\n\n\ndf_Sectores &lt;- pxR::read.px(\"./datos/3994.px\") %&gt;% as.data.frame\ndf_Sectores &lt;- janitor::clean_names(df_Sectores) \ndf_Nacimiento &lt;- pxR::read.px(\"./datos/6567.px\") %&gt;% as.data.frame\ndf_Nacimiento &lt;- janitor::clean_names(df_Nacimiento)\ndf_Vegetativo &lt;- pxR::read.px(\"./datos/6567.px\") %&gt;% as.data.frame\ndf_Vegetativo &lt;- janitor::clean_names(df_Vegetativo) \ndf_Turismo &lt;- pxR::read.px(\"./datos/02001.px\") %&gt;% as.data.frame"
  },
  {
    "objectID": "my_trabajo_BigData.html#población-por-ccaa",
    "href": "my_trabajo_BigData.html#población-por-ccaa",
    "title": "Análisis general de las regiones de España",
    "section": "Población por CCAA",
    "text": "Población por CCAA\nAquí observamos un gráfico animado de lineas sobre la evolución de la población de España por comunidades autónomas desde 1996 hasta 2020.\n\n\nCódigo\n#Descarga de los datos + arreglo para que se quede por comunidades\nmy_url &lt;- \"https://github.com/perezp44/pjpv.datos.01/raw/master/data/pob_muni_1996_2020.rda\"\nmy_destination &lt;- here::here(\"datos\", \"pob_mun_1996_2020.rda\") #- datos\ncurl::curl_download(url = my_url,  destfile = my_destination)  #- descarga\ndf &lt;- rio::import(my_destination) #- importamos\n\n\ndf_ccaa &lt;- df %&gt;%  \n  group_by(year, ine_ccaa.n) %&gt;%      #- agrupamos tb x año\n  summarise(Pob_CCAA = sum(pob_total, na.rm = TRUE)) %&gt;%   #- cuidado con na.rm = FALSE\n  ungroup()\n\n# Gráfico s/ la poblacion por comunidades desde 1996 hasta 2020\np_animado &lt;- ggplot(df_ccaa, aes(x = year, y = Pob_CCAA, color = as.factor(ine_ccaa.n))) +\n  geom_line(size = 1) +\n  geom_point(size = 2, alpha = 0.7) +\n  labs(\n    title = \"Evolución de la Población por CCAA (1996-2020)\",\n    x = \"Año\",\n    y = \"Población\",\n    color = \"Comunidad Autónoma\"\n  ) +\n  scale_color_discrete(name = \"Comunidad Autónoma\") +\n  theme_minimal() +\n  theme(\n    legend.title = element_text(face = \"bold\", size = 10),\n    plot.title = element_text(face = \"bold\", size = 14, hjust = 0.5),\n    axis.title = element_text(face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.text = element_text(size = 8),\n    panel.grid.major = element_line(color = \"gray\", linetype = \"dashed\", size = 0.5),\n    legend.position = \"right\",\n    axis.text.y = element_text(size = 9, hjust = 0.5, vjust = 0.5, color = \"black\")\n  ) +\n  scale_y_continuous(labels = scales::comma_format(scale = 1e-6, suffix = \"M\")) +  # Formato de etiquetas\n  \n  transition_reveal(year)\n\n# Mostrar la animación\nanimate(p_animado)\n\n\n\n\n\n\n\n\n\nLos datos que más destacan son los de Andalucía, Cataluña, Madrid y la Comunidad Valenciana. Presentan poblaciones muy superiores a las del resto además de mostrar un fuerte crecimiento constante.\n\nMujeres vs Hombres\nEn este gráfico representamos la población española por grupos de edad y sexo por miles de habitantes.\n\n\nCódigo\ndf_pob_myh &lt;- pxR :: read.px(\"./datos/4925.px\") %&gt;% as.data.frame()\n\ndf_pob_myh &lt;- df_pob_myh %&gt;% rename(CCAA = Comunidades.y.Ciudades.Autónomas)\n\n# Convertir niveles específicos del factor a numérico\ndf_pob_myh$Periodo &lt;- as.numeric(as.character(df_pob_myh$Periodo))\ndf_pob_myh$CCAA &lt;- as.character(df_pob_myh$CCAA)\ndf_pob_myh$Sexo &lt;- as.character(df_pob_myh$Sexo)\n\ndf_pob_limpio &lt;- df_pob_myh %&gt;%\n  filter(Periodo == \"2022\") %&gt;%\n  filter(Edad != \"Total\") %&gt;%\n  filter(Sexo != \"Ambos sexos\") %&gt;%\n  filter(CCAA == \"Total Nacional\")\n\np_pob &lt;- ggplot(data = df_pob_limpio, aes(x = ifelse(Sexo == \"Mujeres\", -value, value), y = Edad, fill = Sexo, color = Sexo)) +\n  geom_col(position = \"identity\", color = \"white\", alpha = 0.6) +\n  geom_path(aes(x = value, y = Edad, group = Sexo)) +\n  labs(title = \"Pirámide de Población en España por Edad\",\n       x = \"Número de Personas\",\n       y = \"Edad\",\n       caption = \"Datos: INE\",\n       fill = \"Género\",\n       color = \"Género\") +\n  theme_minimal() +\n  scale_x_continuous(labels = abs) +  # Mostrar valores absolutos en el eje x\n  scale_fill_manual(values = c(\"Hombres\" = \"blue\", \"Mujeres\" = \"pink\")) +  # Cambiar el color de la leyenda \"Hombres\"\n  scale_color_manual(values = c(\"Hombres\" = \"blue\", \"Mujeres\" = \"pink\"))  # Cambiar el color de la leyenda \"Hombres\" en geom_path\n\np_pob\n\n\n\n\n\n\n\n\n\nSi nos centramos en los grupos de edad, podemos ver claramente cómo los grupos de mayor edad son los mayoritarios. También podemos ver que hay más mujeres que hombres, sobretodo si nos fijamos en las personas con más edad.\n\n\nProvincias mas pobladas 2020\nEste gráfico circular nos muestra las 10 provincias más pobladas de España en 2020.\n\n\nCódigo\n# (los datos ya estan descargados, es solo agrupar)\ndf_prov &lt;- df %&gt;%  \n  group_by(year, ine_prov.n) %&gt;%    \n  summarise(Pob_CCAA = sum(pob_total, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n#Cogemos los datos más actuales:\ndf_prov_2020 &lt;- df_prov %&gt;% filter(year == 2020)\n\n# Seleccionar las 10 provincias más pobladas\ndf_prov_2020_top10 &lt;- df_prov_2020 %&gt;%\n  top_n(10, wt = Pob_CCAA)\n\n\n#Grafico pastel interactivo\ngrafico_pastel_interactivo &lt;- plot_ly(\n  df_prov_2020_top10,\n  labels = ~ine_prov.n,\n  values = ~Pob_CCAA,\n  type = \"pie\",\n  textinfo = \"label+text+value\",\n  hoverinfo = \"text\",\n  hovertemplate = \"%{label}: %{value}\",\n  marker = list(colors = rainbow(length(df_prov_2020_top10$ine_prov.n)))\n) %&gt;%\n  layout(\n    title = \"Distribución de la Población por Provincia en 2020\",\n    showlegend = TRUE,\n    legend = list(x = 1, y = 0.5),\n    margin = list(l = 50, r = 50, b = 50, t = 100),\n      showarrow = FALSE\n    )\n\n# Mostrar el gráfico circular interactivo\ngrafico_pastel_interactivo\n\n\n\n\n\n\nHay que destacar que, si analizamos por provincias en vez de por comunidades autónomas, Madrid supera a Barcelona. Además, antes la CCAA más poblada era Andalucía, y si nos fijamos sólo en Sevilla o en Cádiz, nos damos cuenta de que las provincias andaluzas no son tan grandes de lo que parecían en el anterior gáfico (eso sí, la comunidad entera es muy grande)."
  },
  {
    "objectID": "my_trabajo_BigData.html#nacimientos-vs-defunciones",
    "href": "my_trabajo_BigData.html#nacimientos-vs-defunciones",
    "title": "Análisis general de las regiones de España",
    "section": "Nacimientos vs Defunciones",
    "text": "Nacimientos vs Defunciones\nVamos a comparar la población que nace y la población que muere cada año y luego ver si el saldo es positivo o negativo.\n\n\nCódigo\ndf_Nacimiento &lt;- pxR::read.px(\"./datos/6567.px\") %&gt;% as.data.frame\n\ndf_Nacimiento &lt;- janitor::clean_names(df_Nacimiento) \n\ndf_Nacimiento$fecha_anual &lt;- ymd(paste0(df_Nacimiento$periodo, \"-01-01\"))\n\ndf_Nacimiento &lt;- df_Nacimiento %&gt;% \n  mutate(año = lubridate::year(fecha_anual)) %&gt;% \n  mutate(trimestre = lubridate::quarter(fecha_anual))  %&gt;% \n  select(-periodo)\n\ndf_Nacimiento &lt;- df_Nacimiento %&gt;% \n  filter(!(is.na(value)))  \n\ndf_Nacimiento &lt;- df_Nacimiento %&gt;% \n  group_by(año, conceptos_demograficos) %&gt;% \n  summarise(total = sum(value, na.rm = TRUE))\n\ngrafico_nacimiento &lt;- ggplot(data = df_Nacimiento, aes(x=año, y=total , group = conceptos_demograficos)) +\n  geom_line(aes(color = conceptos_demograficos), linetype= \"solid\",size = 2) +\n  geom_point(size=1)  +\n  transition_reveal(año) +\n  labs(title = \"Nacimientos y defunciones durante los ultimos 15 años\",\n       caption = \"Datos del INE\",\n       x = \"Años\",\n       y = \"Nº Nacimientos y Defunciones \") +\n  theme_fivethirtyeight()+\n  theme(title=element_text(family=\"Arial\",size=9,color=\"black\", hjust=0.2,lineheight=0.8),\n        plot.subtitle=element_text(family=\"myFont\",size=8,color=\"orange\",hjust=0.6,lineheight=0.2))+\n  scale_color_brewer(palette = \"Dark2\")\n\ngrafico_nacimiento"
  },
  {
    "objectID": "my_trabajo_BigData.html#saldo-vegetativo",
    "href": "my_trabajo_BigData.html#saldo-vegetativo",
    "title": "Análisis general de las regiones de España",
    "section": "Saldo Vegetativo",
    "text": "Saldo Vegetativo\n\n\nCódigo\ndf_Vegetativo$fecha_anual &lt;- ymd(paste0(df_Vegetativo$periodo, \"-01-01\"))\n\ndf_Vegetativo &lt;- df_Vegetativo %&gt;% \n  mutate(año = lubridate::year(fecha_anual)) %&gt;% \n  mutate(trimestre = lubridate::quarter(fecha_anual))  %&gt;% \n  select(-periodo)\n\n\ndf_Vegetativo &lt;- df_Vegetativo %&gt;% \n  filter(!(is.na(value)))  \n\ndf_Vegetativo_pivotado &lt;- df_Vegetativo %&gt;%\n  pivot_wider(names_from = conceptos_demograficos, values_from = value, names_prefix = \"total_\") %&gt;%\n  arrange(año)\n\n\n\ndf_Vegetativo_pivotado &lt;- df_Vegetativo_pivotado %&gt;%  \n  group_by(año) %&gt;%      \n  summarise(Nacimientos = sum(total_Nacimiento, na.rm = TRUE),    \n            Defunciones = sum(total_Defunción, na.rm = TRUE)) %&gt;% \n              ungroup()\n\ndf_Vegetativo_pivotado &lt;- df_Vegetativo_pivotado %&gt;%\n  mutate(Saldo_Vegetativo = Nacimientos - Defunciones)\n\n\ngrafico_Saldo_Vegetativo &lt;- ggplot(data = df_Vegetativo_pivotado, aes(x = año, y = Saldo_Vegetativo)) +\n  geom_line(aes(color = Saldo_Vegetativo), color = \"orange\", linetype = \"solid\", size = 2) +\n  geom_hline(yintercept = 5, linetype = \"solid\", color = \"black\", size = 1) +\n  geom_point(size = 1) +\n  labs(\n    title = \"Saldo Vegetativo durante los últimos 15 años\",\n    caption = \"Datos del INE\",\n    x = \"Años\",\n    y = \"Nº Nacimientos y Defunciones \"\n  ) + theme(\n  title = element_text(family = \"Arial\", size = 9, color = \"black\"))\n\ngrafico_Saldo_Vegetativo\n\n\n\n\n\n\n\n\n\nSi solo viéramos el gráfico sobre el saldo vegetativo podríamos decir que en 2015 el saldo es negativo porque mueren más que nacen, que es verdad,pero si vemos el grafico anterior vemos como esto se da principalmente por la poca natalidad que tenemos y a la caída en picado de esta."
  },
  {
    "objectID": "my_trabajo_BigData.html#mapa-de-suicidios",
    "href": "my_trabajo_BigData.html#mapa-de-suicidios",
    "title": "Análisis general de las regiones de España",
    "section": "Mapa de suicidios",
    "text": "Mapa de suicidios\nEn estos mapas conjuntos representamos la tasa de suicidio por cada 100.000 habitantes clasificados por varios años y comunidades.\n\n\nCódigo\n#- cargo GEOMETRIAS de provincias\ndf_geo_prov &lt;- pjpv.curso.R.2022::LAU2_prov_2020_canarias\n\n\n#- me quedo con las vv. q me interesan\ndf_geo_prov &lt;- df_geo_prov %&gt;% select(ine_ccaa, ine_ccaa.n)\n\n\n#- podemos \"agregar\" geometrías (este es el de las COMUNIDADES)\ndf_geo_ccaa &lt;- df_geo_prov %&gt;%\n  group_by(ine_ccaa, ine_ccaa.n) %&gt;% summarize() %&gt;% ungroup()\n\n#GRAFICOS SUICIDIO MAPA\ndf_suicidio &lt;- pxR :: read.px(\"./datos/46688.px\") %&gt;% as.data.frame()\ndf_suicidio &lt;- df_suicidio %&gt;% rename(CCAA = Comunidades.y.Ciudades.Autónomas)\n\n# Convertir niveles específicos del factor a numérico\ndf_suicidio$Periodo &lt;- as.numeric(as.character(df_suicidio$Periodo))\ndf_suicidio$CCAA &lt;- as.character(df_suicidio$CCAA)\n\ndf_suicidio &lt;- df_suicidio %&gt;%\n  mutate(CCAA = ifelse(CCAA == \"National Total\",\n                       paste(\"00\", CCAA),\n                       CCAA))\ndf_suicidio &lt;- df_suicidio %&gt;%\n  tidyr::separate(CCAA, sep = \" \",\n                  into = c(\"ine_ccaa\", \"ine_ccaa.n\"), extra = \"merge\")\ndf_suic_selec &lt;- df_suicidio %&gt;%\n  filter(Sexo == \"Total\") %&gt;%\n  filter(Edades == \"Todas las edades\") %&gt;%\n  filter(ine_ccaa != \"National Total\") \n\n\ndf_con_geo_suic &lt;- left_join(df_geo_ccaa, df_suic_selec, by = c(\"ine_ccaa\" = \"ine_ccaa\"))\n\np_suic &lt;- df_con_geo_suic %&gt;%\n  ggplot() +\n  geom_sf(aes(fill = value,  geometry = geometry), color = \"black\", size = .1) +\n  labs(title = \"Tasa suicidio por comunidad y año\",\n       subtitle = \"(valor por cada 100.000 habitantes)\",\n       fill = \"Escala\",\n       caption = \"Datos sacados de INE\") + theme_light() +\n  coord_sf(xlim = c(-12, 5), ylim = c(35,45 )) +\n  scale_fill_viridis_c()\n\np_suic + facet_wrap(vars(Periodo))\n\n\n\n\n\n\n\n\n\nSi lo analizamos, sorprende como las tasas más altas se encuentran en el norte, por otro lado, también sorprende cómo la Comunidad de Madrid tiene las tasas más bajas, igual el frío y la lluvia tienen algo que ver."
  },
  {
    "objectID": "my_trabajo_BigData.html#pib-nominal-españa",
    "href": "my_trabajo_BigData.html#pib-nominal-españa",
    "title": "Análisis general de las regiones de España",
    "section": "PIB nominal España",
    "text": "PIB nominal España\nAquí vemos una visión general del PIB Nominal por comunidades.\n\n\nCódigo\n\ndf_pibn &lt;- pxR :: read.px(\"./datos/01001.px\") %&gt;% as.data.frame()\n\n#- cambiamos los nombres\ndf_pibn &lt;- df_pibn %&gt;% rename(actividad = Ramas.de.actividad)\ndf_pibn &lt;- df_pibn %&gt;% rename(CCAA = Comunidades.y.ciudades.autónomas)\n\n\n# Convertir niveles específicos del factor a numérico\ndf_pibn$periodo &lt;- as.numeric(as.character(df_pibn$periodo))\ndf_pibn$CCAA &lt;- as.character(df_pibn$CCAA)\ndf_pibn$Magnitud &lt;- as.character(df_pibn$Magnitud)\ndf_pibn$actividad &lt;- as.character(df_pibn$actividad)\n\n#- quitamos los numeros de las provincias\ndf_pibn &lt;- df_pibn %&gt;%\n  mutate(CCAA = ifelse(CCAA == \"Total Nacional\",\n                       paste(\"00\", CCAA),\n                       CCAA))\ndf_pibn &lt;- df_pibn %&gt;%\n  tidyr::separate(CCAA, sep = \" \",\n                  into = c(\"ine_ccaa\", \"ine_ccaa.n\"), extra = \"merge\")\n\n# filtramos los datos\ndf_activ_pib &lt;- df_pibn %&gt;%\n  filter(actividad == \"PRODUCTO INTERIOR BRUTO A PRECIOS DE MERCADO\")\n\ndf_pib_valor &lt;- df_activ_pib %&gt;%\n  filter(Magnitud == \"Valor\")\n\n\n#- vamos a hacer ahora una coropleta con el pib nominal de cada ccaa\ndf_pib_ccaa &lt;- df_pib_valor %&gt;%\n  filter(actividad == \"PRODUCTO INTERIOR BRUTO A PRECIOS DE MERCADO\") %&gt;%\n  filter(periodo != \"NA\") %&gt;%\n  select(-c(Magnitud, actividad))\n\ndf_ccaa_2016 &lt;- df_pib_ccaa %&gt;% filter(periodo == min(periodo, na.rm = TRUE))\n\n\n#- junto geometría (df_geo_ccaa) con datos INE (df_ccaa_2016)\n#- las geometrías a la izquierda\ndf_con_geo_pib &lt;- left_join(df_geo_ccaa, df_ccaa_2016, by = c(\"ine_ccaa\" = \"ine_ccaa\"))\n\n# coropletas con más opciones\nqtm(df_con_geo_pib, fill = \"value\", fill.n = 4, fill.palette = \"div\",\n    fill.title = \"PIB NOMINAL\",  style = \"col_blind\")\n\n\n\n\n\n\n\n\n\nSe que estos datos no nos dicen mucho pero así vemos el peso que tiene cada lugar en la economía, como veis, Valencia mola mucho, no sorprende que Madrid y Cataluña sean los mas potentes, tambien Andalucía tiene mucho peso, aunque sea por su gran tamaño como comunidad."
  },
  {
    "objectID": "my_trabajo_BigData.html#población-activa-por-sectores",
    "href": "my_trabajo_BigData.html#población-activa-por-sectores",
    "title": "Análisis general de las regiones de España",
    "section": "Población activa por sectores",
    "text": "Población activa por sectores\nEn este caso vamos a ver cómo se divide la población en activo Española a través de 4 sectores distintos más el porcentaje de parados por año. Lo veremos a través de 4 años distintos con un gráfico circular.\n\n\nCódigo\ndf_Sectores &lt;- df_Sectores %&gt;% \n  mutate(fecha = lubridate::yq(periodo)) %&gt;% \n  mutate(anyo = lubridate::year(fecha)) %&gt;% \n  mutate(trimestre = lubridate::quarter(fecha))  %&gt;% \n  select(-periodo)\n\n\n\nIndustria &lt;- df_Sectores %&gt;%\n  filter (sector_economico == \"Industria\") %&gt;%\n  filter (provincias == \"Total Nacional\") %&gt;%\n  select (!c(trimestre, fecha)) %&gt;%\n  filter (anyo &lt; 2023) %&gt;%  \n  group_by(anyo, sector_economico) %&gt;%      \n  summarise(Porcentaje = sum(value, na.rm = TRUE)/4) %&gt;%  \n  ungroup()\n\nServicios &lt;- df_Sectores %&gt;%\n  filter (sector_economico == \"Servicios\") %&gt;%\n  filter (provincias == \"Total Nacional\") %&gt;%\n  select (!c(trimestre, fecha)) %&gt;%\n  filter (anyo &lt; 2023) %&gt;%  \n  group_by(anyo, sector_economico) %&gt;%      \n  summarise(Porcentaje = (sum(value, na.rm = TRUE)/4)-0.025) %&gt;%   \n  ungroup()\n\nAgricultura &lt;- df_Sectores %&gt;%\n  filter (sector_economico == \"Agricultura\") %&gt;%\n  filter (provincias == \"Total Nacional\") %&gt;%\n  select (!c(trimestre, fecha)) %&gt;%\n  filter (anyo &lt; 2023)%&gt;%  \n  group_by(anyo, sector_economico) %&gt;%      \n  summarise(Porcentaje = sum(value, na.rm = TRUE)/4) %&gt;%   \n  ungroup()\n\nConstrucción &lt;- df_Sectores %&gt;%\n  filter (sector_economico == \"Construcción\") %&gt;%\n  filter (provincias == \"Total Nacional\") %&gt;%\n  select (!c(trimestre, fecha)) %&gt;%\n  filter (anyo &lt; 2023) %&gt;%  \n  group_by(anyo, sector_economico) %&gt;%      \n  summarise(Porcentaje = sum(value, na.rm = TRUE)/4) %&gt;%  \n  ungroup()\n\nSectores_combinados &lt;- Construcción %&gt;%\n  full_join(Agricultura) %&gt;%\n  full_join(Servicios) %&gt;%\n  full_join(Industria) \n\nSectores_combinados &lt;- Sectores_combinados %&gt;% \n  arrange(anyo)%&gt;%\n  pivot_wider(names_from = sector_economico, values_from = Porcentaje) %&gt;%\n  mutate(Parados = 100-`Construcción`-`Agricultura`-`Servicios`-`Industria`) %&gt;%\n  pivot_longer(cols = 2:6, names_to = \"sectores\", values_to = \"Porcentaje\") \n\n\nSectores_combinados_2008 &lt;- Sectores_combinados %&gt;%\n  filter (anyo == 2008)%&gt;%\n  mutate(Porcentaje_2decimales = round(Porcentaje, 2),\n         csum = rev(cumsum(rev(Porcentaje_2decimales))),\n         posicion = Porcentaje_2decimales/2 + lead(csum, 1))%&gt;%\n  mutate(posicion = ifelse(is.na(posicion), Porcentaje_2decimales/2, posicion))\n\nSectores_combinados_2013 &lt;- Sectores_combinados %&gt;%\n  filter (anyo == 2013)%&gt;%\n  mutate(Porcentaje_2decimales = round(Porcentaje, 2),\n         csum = rev(cumsum(rev(Porcentaje_2decimales))),\n         posicion = Porcentaje_2decimales/2 + lead(csum, 1))%&gt;%\n  mutate(posicion = ifelse(is.na(posicion), Porcentaje_2decimales/2, posicion))\n\nSectores_combinados_2018 &lt;- Sectores_combinados %&gt;%\n  filter (anyo == 2018)%&gt;%\n  mutate(Porcentaje_2decimales = round(Porcentaje, 2),\n         csum = rev(cumsum(rev(Porcentaje_2decimales))),\n         posicion = Porcentaje_2decimales/2 + lead(csum, 1))%&gt;%\n  mutate(posicion = ifelse(is.na(posicion), Porcentaje_2decimales/2, posicion))\n\n\nSectores_combinados_2022 &lt;- Sectores_combinados %&gt;%\n  filter (anyo == 2022)%&gt;%\n  mutate(Porcentaje_2decimales = round(Porcentaje, 2),\n         csum = rev(cumsum(rev(Porcentaje_2decimales))),\n         posicion = Porcentaje_2decimales/2 + lead(csum, 1))%&gt;%\n  mutate(posicion = ifelse(is.na(posicion), Porcentaje_2decimales/2, posicion))\n\n\nSectores_combinados_Grafico_2008 &lt;- ggplot(Sectores_combinados_2008, aes(x = \"\" , y = Porcentaje , fill = fct_inorder(sectores))) +\n  geom_col(width = 1, color = 2) +\n  coord_polar(theta = \"y\") +\n  scale_fill_brewer(palette = \"YlOrBr\") +\n  ggtitle(\"2008\")+\n  geom_label_repel(data = Sectores_combinados_2008,\n                   aes(y = posicion, label = paste0(Porcentaje, \"%\")),\n                   size = 4, nudge_x = 1, show.legend = FALSE) +\n  guides(fill = guide_legend(title = \"Sector\")) +\n  theme_void() \n\n\n\nSectores_combinados_Grafico_2013 &lt;- ggplot(Sectores_combinados_2013, aes(x = \"\" , y = Porcentaje , fill = fct_inorder(sectores))) +\n  geom_col(width = 1, color = 2) +\n  coord_polar(theta = \"y\") +\n  scale_fill_brewer(palette = \"Paired\") +\n  ggtitle(\"2013\")+ \n  geom_label_repel(data = Sectores_combinados_2013,\n                   aes(y = posicion, label = paste0(Porcentaje, \"%\")),\n                   size = 4, nudge_x = 1, show.legend = FALSE) +\n  guides(fill = guide_legend(title = \"Sector\")) +\n  theme_void() \n\nSectores_combinados_Grafico_2018 &lt;- ggplot(Sectores_combinados_2018, aes(x = \"\" , y = Porcentaje , fill = fct_inorder(sectores))) +\n  geom_col(width = 1, color = 2) +\n  coord_polar(theta = \"y\") +\n  scale_fill_brewer(palette = \"Pastel1\") +\n  ggtitle(\"2018\")+\n  geom_label_repel(data = Sectores_combinados_2018,\n                   aes(y = posicion, label = paste0(Porcentaje_2decimales, \"%\")),\n                   size = 4, nudge_x = 1, show.legend = FALSE) +\n  guides(fill = guide_legend(title = \"Sector\")) +\n  theme_void() \n\nSectores_combinados_Grafico_2022 &lt;- ggplot(Sectores_combinados_2022 , aes(x = \"\" , y = Porcentaje , fill = fct_inorder(sectores))) +\n    geom_col(width = 1, color = 2) +\n    coord_polar(theta = \"y\") +\n    scale_fill_brewer(palette = \"Purples\") +\n    ggtitle(\"2022\")+\n    geom_label_repel(data = Sectores_combinados_2022,\n                     aes(y = posicion, label = paste0(Porcentaje, \"%\")),\n                     size = 4, nudge_x = 1, show.legend = FALSE) +\n    guides(fill = guide_legend(title = \"Sector\")) +\n    theme_void() \n\nwrap_plots(Sectores_combinados_Grafico_2008, Sectores_combinados_Grafico_2013, Sectores_combinados_Grafico_2018, Sectores_combinados_Grafico_2022, \n           ncol = 2, nrow = 2,\n           widths = c(1, 1), heights = c(1, 1)) +\n  plot_annotation(title = \"Como se divide la población activa en España\",\n                  subtitle = \"(2008, 2013, 2018 y 2022 (respectivamente))\",\n                  caption = \"Datos del INE\")\n\n\n\n\n\n\n\n\n\nCon el gráfico podemos ver cómo la población activa Española se dedica esencialmente en los servicios. Destacar que en 2013 solo el sector servicios superaba a la gente parada."
  },
  {
    "objectID": "my_trabajo_BigData.html#salario-medio-ccaa",
    "href": "my_trabajo_BigData.html#salario-medio-ccaa",
    "title": "Análisis general de las regiones de España",
    "section": "Salario medio CCAA",
    "text": "Salario medio CCAA\nEl siguiente gráfico de barras animado nos muestra la distribución salarial en España por comunidades autónomas desde 2006 hasta 2022.\n\n\nCódigo\ndf_salarios_CCAA &lt;- pxR::read.px(\"./datos/salarios_CCAA.px\") %&gt;% as.data.frame\n\n#Cambio nombre de una columna (para que sea más fácil)\n\ndf_salarios_CCAA &lt;- df_salarios_CCAA %&gt;%\n  rename(CCAA = Comunidades.y.Ciudades.Autonómas)\n\n#De 2006 a 2022\n\ndf_salarios_CCAA$Periodo &lt;- factor(df_salarios_CCAA$Periodo, levels = rev(unique(df_salarios_CCAA$Periodo)))\n\n#Gráfico animado\n\np_base &lt;- ggplot(df_salarios_CCAA, aes(x = CCAA, y = value, fill = CCAA)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Salario medio por Comunidades Autónomas en {closest_state}\",\n    x = \"Comunidad Autónoma\",\n    y = \"Salario Medio\",\n    fill = \"Comunidad Autónoma\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\",\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(size = 10),\n    axis.line = element_line(color = \"black\"),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.border = element_blank(),\n    panel.background = element_blank()\n  ) +\n  geom_text(\n    aes(label = value),\n    vjust = -0.5,\n    color = \"black\",\n    size = 3,\n    position = position_dodge(width = 0.7)\n  )\n\n# Crear la animación\np_animado &lt;- p_base +\n  transition_states(Periodo, transition_length = 12, state_length = 6) +  # Ajustar la velocidad aquí\n  ease_aes('linear')\n\n# Guardar la animación como un archivo GIF\nanim_save(\"salarios_CCAA_animacion.gif\", animation = p_animado)\n\n# Cargar la animación desde el archivo\nanimacion_salarios &lt;- image_read(\"salarios_CCAA_animacion.gif\")\n\n# Mostrar la animación\nimage_animate(animacion_salarios)\n\n\n\n\n\n\n\n\n\nSe observa un mini receso hasta 2012 y a partir de ahi un crecimiento constante. Además de Madrid y Cataluña, cabe destacar la media de Melilla, muchas veces superior a la de otras comunidades, y la del País Vasco, la comunidad con mejor saldo medio en 2022.\n\nSalario CCAA 2022\nAquí os dejo un gráfico de barras medio bonito de la distribución salarial en España por CCAA, pero solo de 2022. Al ser el otro en movimiento, dejo este estático con los resultados de 2022 que entiendo que son los más interesantes y actuales.\n\n\nCódigo\n#GRAFICO (SOLO 2022)\ndf_salarios_2022 &lt;- df_salarios_CCAA %&gt;%\n  filter(Periodo == 2022)\n\n\nggplot(df_salarios_CCAA, aes(x = CCAA, y = value, fill = CCAA)) +\n  geom_bar(stat = \"identity\", width = 0.7, color = \"white\") +\n  labs(\n    title = \"Salario medio España por CCAA (2022)\",\n    x = \"Comunidades Autónomas\",\n    y = \"Salario medio\",\n    fill = \"Comunidad Autónoma\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\",  # No mostrar la leyenda\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(size = 10),\n    axis.line = element_line(color = \"black\"),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.border = element_blank(),\n    panel.background = element_blank()\n  ) \n\n\n\n\n\n\n\n\n\n\n\nHOMBRES vs MUJERES\nEste es un gráfico de lineas interactivo comparando la media salarial en España entre hombres y mujeres.\n\n\nCódigo\nsalarios_diferencia_genero &lt;- pxR::read.px(\"./datos/salarios_hombres_mujeres.px\") %&gt;% as.data.frame\n\n#- Arreglo los datos para que empiece en 2006 y termine en 2022\nsalarios_diferencia_genero$Periodo &lt;- factor(salarios_diferencia_genero$Periodo, levels = rev(unique(salarios_diferencia_genero$Periodo)))\n\n# Crear el gráfico\np &lt;- ggplot(salarios_diferencia_genero, aes(x = Periodo, y = value, color = Sexo, group = Sexo)) +\n  geom_line(size = 1, show.legend = FALSE) +  # Evitar mostrar líneas en la leyenda\n  geom_point(aes(text = paste(Sexo, \": \", value)), show.legend = FALSE) +  # Mostrar puntos con texto para información detallada al señalar\n  labs(\n    title = \"Diferencia Salarial entre Hombres y Mujeres (2002-2020)\",\n    x = \"Año\",\n    y = \"Diferencia Salarial\",\n    color = \"Sexo\",\n    caption = \"Fuente: Tus datos\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"top\",\n    legend.title = element_text(face = \"bold\"),\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(size = 10, angle = 45, hjust = 1),  # Ajusta el ángulo de las etiquetas\n    legend.text = element_text(size = 10)\n  )\n\n# Gráfico interactivo con plotly\np_interactivo &lt;- ggplotly(p, tooltip = \"text\", dynamicTicks = TRUE)\n\n# Mostrar el gráfico interactivo\np_interactivo\n\n\n\n\n\n\nUna pena que por ahora no se hayan igualado."
  },
  {
    "objectID": "my_trabajo_BigData.html#tasa-de-pobreza",
    "href": "my_trabajo_BigData.html#tasa-de-pobreza",
    "title": "Análisis general de las regiones de España",
    "section": "Tasa de pobreza",
    "text": "Tasa de pobreza\nAquí lo que hemos hecho es un gráfico donde aparece la evolución de la tasa de pobreza de ciertas comunidades, hemos elegido las comunidades con mayor tasa y las que menos (aunque realmente no ha sido tan así, hemos cogido las que nos venían bien para que quedase chulo en el gráfico).\n\n\nCódigo\ndf_pobreza &lt;- pxR :: read.px(\"./datos/9963.px\") %&gt;% as.data.frame()\n\n#- cambiar nombres\ndf_pobreza &lt;- df_pobreza %&gt;% rename(tasa = Tasa.de.riesgo.de.pobreza)\ndf_pobreza &lt;- df_pobreza %&gt;% rename(CCAA = Comunidades.y.Ciudades.Autónomas)\n# Convertir niveles específicos del factor a numérico\ndf_pobreza$Periodo &lt;- as.numeric(as.character(df_pobreza$Periodo))\ndf_pobreza$CCAA &lt;- as.character(df_pobreza$CCAA)\n\n#- separamos los numeros de cada provincia\ndf_pobreza &lt;- df_pobreza %&gt;%\n  mutate(CCAA = ifelse(CCAA == \"Total Nacional\",\n                       paste(\"00\", CCAA),\n                       CCAA))\ndf_pobreza &lt;- df_pobreza %&gt;%\n  tidyr::separate(CCAA, sep = \" \",\n                  into = c(\"ine_ccaa\", \"ine_ccaa.n\"), extra = \"merge\")\n\ndf_tasa_pobr &lt;- df_pobreza %&gt;%\n  filter(tasa == \"Tasa de riesgo de pobreza (renta del año anterior a la entrevista)\")\n\n\n# Filtrar los datos para los países\nccaas_pobr &lt;- c(\"Total Nacional\", \"Navarra, Comunidad Foral de\", \"Castilla - La Mancha\", \"País Vasco\", \"Madrid, Comunidad de\", \"Andalucía\", \"Aragón\", \"Murcia, Región de\")\ndf_ccaa_pobr_elegidas &lt;- df_tasa_pobr %&gt;% filter(ine_ccaa.n %in% ccaas_pobr)\n# Mantener la información de nivel al convertir a caracter\n\n\n# Crear el gráfico de líneas múltiples con colores personalizados\nggplot(df_ccaa_pobr_elegidas, aes(x = Periodo, y = value, group = ine_ccaa.n, color = ine_ccaa.n)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Evolución Tasa de pobreza\",\n       x = \"Año\",\n       y = \"Porcentaje riesgo de pobreza\") + \n  scale_color_brewer(palette = \"Set1\") +  # Cambiar la paleta de colores\n  theme_minimal() +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\n\n\nTenemos que destacar los repuntes al alza en comunidades como Murcia y Andalucía en los años 2015-2016."
  },
  {
    "objectID": "my_trabajo_BigData.html#grafico-de-lineas-pobreza",
    "href": "my_trabajo_BigData.html#grafico-de-lineas-pobreza",
    "title": "Análisis general de las regiones de España",
    "section": "Grafico de Lineas Pobreza",
    "text": "Grafico de Lineas Pobreza\nEn esta tabla se representa la tasa de pobreza de todas las comunidades en el año 2022 para así tener una idea a primera vista de cómo se distribuye.\n\n\nCódigo\ndf_noceuta &lt;- df_tasa_pobr %&gt;%\n  filter(ine_ccaa.n != \"Ceuta\") %&gt;%\n  filter(ine_ccaa.n != \"Melilla\") %&gt;%\n  filter(ine_ccaa.n != \"Total Nacional\")\n\n  df_noceuta_2022 &lt;- df_noceuta %&gt;% \n    filter (Periodo == \"2022\") %&gt;%\n    select(-c(ine_ccaa, tasa))\n  \n  # Ordenar df_ccaa_2021 de mayor a menor según la columna value\n  df_noceuta_2022 &lt;- df_noceuta_2022 %&gt;% arrange(desc(value))\n\nminimal_table &lt;- gt(df_noceuta_2022) %&gt;% \n  gtExtras::gt_plt_dot(column = value, category_column = ine_ccaa.n ,  max_value = 35) %&gt;% \n  gtExtras::gt_theme_nytimes() %&gt;% \n  tab_header(title = \"Tasa de pobreza 2022\",\n             subtitle = \"renta del año anterior a la entrevista\")\n\nminimal_table\n\n\n\n\n\n\n  \n    \n      Tasa de pobreza 2022\n    \n    \n      renta del año anterior a la entrevista\n    \n    \n      Periodo\n      ine_ccaa.n\n      value\n    \n  \n  \n    2022\n\n  \n    Extremadura\n    \n    \n  \n  \n    \n  \n\n30.0\n    2022\n\n  \n    Canarias\n    \n    \n  \n  \n    \n  \n\n29.4\n    2022\n\n  \n    Andalucía\n    \n    \n  \n  \n    \n  \n\n29.1\n    2022\n\n  \n    Murcia, Región de\n    \n    \n  \n  \n    \n  \n\n26.3\n    2022\n\n  \n    Castilla - La Mancha\n    \n    \n  \n  \n    \n  \n\n26.1\n    2022\n\n  \n    Comunitat Valenciana\n    \n    \n  \n  \n    \n  \n\n22.3\n    2022\n\n  \n    Asturias, Principado de\n    \n    \n  \n  \n    \n  \n\n20.1\n    2022\n\n  \n    Galicia\n    \n    \n  \n  \n    \n  \n\n18.0\n    2022\n\n  \n    Castilla y León\n    \n    \n  \n  \n    \n  \n\n17.8\n    2022\n\n  \n    Balears, Illes\n    \n    \n  \n  \n    \n  \n\n16.9\n    2022\n\n  \n    Rioja, La\n    \n    \n  \n  \n    \n  \n\n16.6\n    2022\n\n  \n    Aragón\n    \n    \n  \n  \n    \n  \n\n15.0\n    2022\n\n  \n    Cantabria\n    \n    \n  \n  \n    \n  \n\n14.8\n    2022\n\n  \n    Madrid, Comunidad de\n    \n    \n  \n  \n    \n  \n\n14.8\n    2022\n\n  \n    Cataluña\n    \n    \n  \n  \n    \n  \n\n14.5\n    2022\n\n  \n    País Vasco\n    \n    \n  \n  \n    \n  \n\n12.2\n    2022\n\n  \n    Navarra, Comunidad Foral de\n    \n    \n  \n  \n    \n  \n\n10.9\n  \n  \n  \n\n\n\n\nLo más destacable de esta tabla donde aparecen todas las comunidades autónomas es la gran diferencia entre los primeros puestos y los últimos, sinceramente, no parece que estos datos están sacados del mismo país (igual habría que replantearse cosas). Podemos ver también cierta relación entre la tasa y si la región es del sur o del norte."
  },
  {
    "objectID": "my_trabajo_BigData.html#precio-de-la-vivienda",
    "href": "my_trabajo_BigData.html#precio-de-la-vivienda",
    "title": "Análisis general de las regiones de España",
    "section": "Precio de la vivienda",
    "text": "Precio de la vivienda\nEste gráfico representa el precio de las viviendas por comunidades a lo largo del tiempo con base en el año 2015, como podemos ver en estas comunidades, los precios de la vivienda se están acercando mucho a los de la burbuja de 2008, sobre todo en las comunidades más urbanas.\n\n\nCódigo\ndf_alquiler &lt;- pxR :: read.px(\"./datos/25171.px\") %&gt;% as.data.frame()\n\n#- CAMBIAR NOMBRES\n\ndf_alquiler &lt;- df_alquiler %&gt;% rename(INDICE = Índices.y.tasas)\ndf_alquiler &lt;- df_alquiler %&gt;% rename(TIPO = General..vivienda.nueva.y.de.segunda.mano)\ndf_alquiler &lt;- df_alquiler %&gt;% rename(CCAA = Comunidades.y.Ciudades.Autónomas)\n\n#CAMBIAR TRIMESTRES\n\ndf_alquiler2 &lt;- df_alquiler %&gt;% \n  mutate(fecha = lubridate::yq(Periodo)) %&gt;% \n  mutate(anyo = lubridate::year(fecha)) %&gt;% \n  mutate(trimestre = lubridate::quarter(fecha))  %&gt;% \n  select(-Periodo)\n\n#SUMAR TRIMESTRE Y QUE SEA ANUAL\n\ndf_alq_año &lt;- df_alquiler2 %&gt;%\n  filter (INDICE == \"Índice\") %&gt;%\n  filter (TIPO == \"General\") %&gt;%\n  select (!c(trimestre, fecha)) %&gt;%\n  filter (anyo &lt; 2023) %&gt;%  \n  group_by(anyo, CCAA) %&gt;%      \n  summarise(Porcentaje = sum(value, na.rm = TRUE)/4) %&gt;%  \n  ungroup()\n#cambiar a caracter\n\ndf_alq_año$CCAA &lt;- as.character(df_alq_año$CCAA)\n#separar numeros\ndf_alq_año &lt;- df_alq_año %&gt;%\n  mutate(CCAA = ifelse(CCAA == \"Nacional\",\n                       paste(\"00\", CCAA),\n                       CCAA))\ndf_alq_año &lt;- df_alq_año %&gt;%\n  tidyr::separate(CCAA, sep = \" \",\n                  into = c(\"ccaa.n\", \"ccaa\"), extra = \"merge\")\n\n\n\ndf_alq_filtr &lt;- df_alq_año %&gt;%\n  filter(ccaa %in% c(\"Andalucía\", \"Cataluña\", \"Comunitat Valenciana\", \"Madrid, Comunidad de\", \"Castilla - La Mancha\", \"Aragón\"),  \n         anyo %in% c(2010, 2016, 2022))  # Lista de años a incluir\n\ndf_alq_filtr &lt;- df_alq_filtr %&gt;%\n  select (!c(ccaa.n))\n\n# Calcular el orden de las comunidades autónomas por el promedio\ndf_alq_filtr %&gt;%\n  group_by(ccaa) %&gt;%\n  summarize(promedio = mean(Porcentaje)) %&gt;%\n  arrange(promedio) %&gt;%\n  pull(ccaa) -&gt; ccaa_orden\n\n# Crear el gráfico de barras con mejoras visuales\nggplot(df_alq_filtr, aes(x = factor(ccaa, levels = ccaa_orden), y = Porcentaje, fill = as.factor(anyo))) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.7, color = \"white\") +\n  geom_text(aes(label = sprintf(\"%.1f\", Porcentaje)), vjust = -0.5, position = position_dodge(width = 0.7), size = 3, color = \"black\") +\n  labs(title = \"Índice precio vivienda por Comunidad Autónoma y Año (BASE=2015)\",\n       x = \"Comunidad Autónoma\",\n       y = \"Porcentaje\") +\n  scale_fill_manual(values = c(\"2010\" = \"#3182bd\", \"2016\" = \"#31a354\", \"2022\" = \"#e6550d\")) +  \n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.title = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        axis.line = element_line(color = \"black\"),\n        legend.position = \"top\",\n        legend.direction = \"horizontal\") \n\n\n\n\n\n\n\n\n\nDestacar como en comunidades como Aragón o Castilla - La Mancha los precios fueron tan elevados en 2010, y como después de la crisis, no han subido tanto como en otras comunidades."
  },
  {
    "objectID": "my_trabajo_BigData.html#turismo-vinculado-a-españa",
    "href": "my_trabajo_BigData.html#turismo-vinculado-a-españa",
    "title": "Análisis general de las regiones de España",
    "section": "Turismo vinculado a España",
    "text": "Turismo vinculado a España\nPara terminar el trabajo, vamos a ver una tabla sobre el turismo que se mueve en España. En ella tenemos 3 filas y 20 columnas donde se explicara como es el movimiento y si estos se quedan a pernoctar o no.\n\n\nCódigo\ndf_Turismo&lt;- df_Turismo %&gt;%\n  filter(!is.na(value)) %&gt;%\n  mutate(value = format(value, big.mark = \".\", decimal.mark = \",\", scientific = FALSE))\n\ndf_Turismo_pivotado &lt;- df_Turismo %&gt;%\n  pivot_wider(names_from = Formas.de.turismo, \n                     values_from = value) %&gt;%\n  arrange(periodo)\n\ndf_Turismo_pivotado &lt;- df_Turismo_pivotado %&gt;%\n  rename( turismo_receptor = `Turismo receptor`, turismo_interno = `Turismo interno`, turismo_emisor = `Turismo emisor` )\n\n\nmi_vector_Turismo &lt;- c(\"turismo_receptor\", \"turismo_interno\", \"turismo_emisor\")\n\ndf_Turismo_pivotado2 &lt;- df_Turismo_pivotado %&gt;%\n  pivot_wider(names_from = periodo,\n              values_from = mi_vector_Turismo)\n\n \ndf_Turismo_final &lt;- df_Turismo_pivotado2 %&gt;% select(Categoría.de.visitantes,Viajes.pernoctaciones,turismo_receptor_2021, turismo_interno_2021, turismo_emisor_2021, turismo_receptor_2020, turismo_interno_2020, turismo_emisor_2020, turismo_receptor_2019, turismo_interno_2019, turismo_emisor_2019, turismo_receptor_2018, turismo_interno_2018, turismo_emisor_2018, turismo_receptor_2017, turismo_interno_2017, turismo_emisor_2017, turismo_receptor_2016, turismo_interno_2016, turismo_emisor_2016)\n\nTabla_Turismo &lt;- gt::gt(df_Turismo_final)\n\nTabla_Turismo &lt;- Tabla_Turismo %&gt;%\n    tab_header(title = \"Estructura del turismo de España\", subtitle = md(\"Tenemos en cuenta todos los movimientos vinculados a España\")) %&gt;%\n  tab_source_note(md(\"Fuente: datos de [INE](https://www.ine.es/index.htm)\")) %&gt;%      \n  tab_source_note(\"Obtenidos a partir del paquete pxR\") %&gt;%\n  tab_spanner(label = \"2021\",\n              columns = c(turismo_receptor_2021, turismo_interno_2021, turismo_emisor_2021))  %&gt;%\n  tab_spanner(label = \"2020\",\n              columns = c(turismo_receptor_2020, turismo_interno_2020, turismo_emisor_2020))  %&gt;%\n  tab_spanner(label = \"2019\",\n              columns = c(turismo_receptor_2019, turismo_interno_2019, turismo_emisor_2019))  %&gt;%\n  tab_spanner(label = \"2018\",\n              columns = c(turismo_receptor_2018, turismo_interno_2018, turismo_emisor_2018))  %&gt;%\n  tab_spanner(label = \"2017\",\n              columns = c(turismo_receptor_2017, turismo_interno_2017, turismo_emisor_2017))  %&gt;%\n  tab_spanner(label = \"2016\",\n              columns = c(turismo_receptor_2016, turismo_interno_2016, turismo_emisor_2016)) \n\n\nTabla_Turismo &lt;- Tabla_Turismo %&gt;%\n  cols_label(Categoría.de.visitantes = \"Tipo de visitante\", \n             Viajes.pernoctaciones = \"Tipo de viaje\",\n             turismo_receptor_2021 = \"Turismo Receptor1\",\n             turismo_interno_2021 = \"Turismo Interno1\",\n             turismo_emisor_2021 = \"Turismo Emisor1\",\n             turismo_receptor_2020 = \"Turismo Receptor2\",\n             turismo_interno_2020 = \"Turismo Interno2\",\n             turismo_emisor_2020 = \"Turismo Emisor2\",\n             turismo_receptor_2019 = \"Turismo Receptor3\",\n             turismo_interno_2019 = \"Turismo Interno3\",\n             turismo_emisor_2019 = \"Turismo Emisor3\",\n             turismo_receptor_2018 = \"Turismo Receptor4\",\n             turismo_interno_2018 = \"Turismo Interno4\",\n             turismo_emisor_2018 = \"Turismo Emisor4\",\n             turismo_receptor_2017 = \"Turismo Receptor5\",\n             turismo_interno_2017 = \"Turismo Interno5\",\n             turismo_emisor_2017 = \"Turismo Emisor5\",\n             turismo_receptor_2016 = \"Turismo Receptor6\",\n             turismo_interno_2016 = \"Turismo Interno6\",\n             turismo_emisor_2016 = \"Turismo Emisor6\")\n\nTabla_Turismo &lt;- Tabla_Turismo %&gt;% \n  opt_row_striping() %&gt;% \n  opt_table_font(font = google_font(\"Fira Mono\")) %&gt;% \n  tab_options(column_labels.border.bottom.color = \"black\",\n              table_body.border.bottom.color = \"black\",\n              table_body.hlines.color = \"orange\")%&gt;%\n  tab_style(style = cell_borders(color = \"black\", weight = px(1)), locations = cells_body())\n\nTabla_Turismo\n\n\n\n\n\n\n  \n    \n      Estructura del turismo de España\n    \n    \n      Tenemos en cuenta todos los movimientos vinculados a España\n    \n    \n      Tipo de visitante\n      Tipo de viaje\n      \n        2021\n      \n      \n        2020\n      \n      \n        2019\n      \n      \n        2018\n      \n      \n        2017\n      \n      \n        2016\n      \n    \n    \n      Turismo Receptor1\n      Turismo Interno1\n      Turismo Emisor1\n      Turismo Receptor2\n      Turismo Interno2\n      Turismo Emisor2\n      Turismo Receptor3\n      Turismo Interno3\n      Turismo Emisor3\n      Turismo Receptor4\n      Turismo Interno4\n      Turismo Emisor4\n      Turismo Receptor5\n      Turismo Interno5\n      Turismo Emisor5\n      Turismo Receptor6\n      Turismo Interno6\n      Turismo Emisor6\n    \n  \n  \n    Turistas\nNúmero de viajes\n 31.180.802\n135.687.709\n  7.205.752\n 18.933.103\n 96.449.394\n  5.074.468\n 83.509.153\n173.754.971\n 20.119.745\n 82.808.413\n176.772.352\n 19.307.118\n 81.868.522\n176.399.801\n 17.289.487\n 75.315.008\n166.218.791\n 15.732.052\n    Excursionistas\nNúmero de viajes\n 20.450.574\n212.971.415\n  1.525.163\n 17.476.868\n160.339.793\n  1.295.822\n 42.660.933\n257.619.303\n  2.971.256\n 41.647.253\n278.190.668\n  3.255.321\n 39.848.764\n280.332.355\n  3.242.631\n 40.246.069\n238.195.864\n  2.872.100\n    Turistas\nNúmero de pernoctaciones\n253.985.281\n557.278.462\n 68.893.926\n147.986.129\n450.689.308\n 42.719.916\n594.017.856\n649.516.399\n144.391.738\n616.714.999\n644.365.970\n151.773.267\n633.696.886\n660.794.364\n141.154.479\n593.417.445\n643.050.482\n137.274.029\n  \n  \n    \n      Fuente: datos de INE\n    \n    \n      Obtenidos a partir del paquete pxR\n    \n  \n  \n\n\n\n\nVemos como todos los años España recibe mas turistas que los que el emigra a otros países, pero por otra parte el turismo que se mueve por el interior es muy superior a estos dos.\n\nCon esto acabamos nuestro trabajo para BigData!!\n\n\n\n\nInformación sobre la sesión\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n\n\n current session info \n\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16 ucrt)\n os       Windows 11 x64 (build 22621)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  Spanish_Spain.utf8\n ctype    Spanish_Spain.utf8\n tz       Europe/Madrid\n date     2023-12-18\n pandoc   3.1.1 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package           * version    date (UTC) lib source\n abind               1.4-5      2016-07-21 [1] CRAN (R 4.3.0)\n assertthat          0.2.1      2019-03-21 [1] CRAN (R 4.3.1)\n backports           1.4.1      2021-12-13 [1] CRAN (R 4.3.0)\n base64enc           0.1-3      2015-07-28 [1] CRAN (R 4.3.0)\n bibtex              0.5.1      2023-01-26 [1] CRAN (R 4.3.1)\n bitops              1.0-7      2021-04-24 [1] CRAN (R 4.3.0)\n broom               1.0.5      2023-06-09 [1] CRAN (R 4.3.1)\n broom.helpers       1.14.0     2023-08-07 [1] CRAN (R 4.3.2)\n cachem              1.0.8      2023-05-01 [1] CRAN (R 4.3.1)\n cellranger          1.1.0      2016-07-27 [1] CRAN (R 4.3.1)\n class               7.3-22     2023-05-03 [1] CRAN (R 4.3.1)\n classInt            0.4-10     2023-09-05 [1] CRAN (R 4.3.1)\n cli                 3.6.1      2023-03-23 [1] CRAN (R 4.3.1)\n clipr               0.8.0      2022-02-22 [1] CRAN (R 4.3.1)\n codetools           0.2-19     2023-02-01 [1] CRAN (R 4.3.1)\n colorspace          2.1-0      2023-01-23 [1] CRAN (R 4.3.1)\n commonmark          1.9.0      2023-03-17 [1] CRAN (R 4.3.1)\n conflicted        * 1.2.0      2023-02-01 [1] CRAN (R 4.3.1)\n countrycode       * 1.5.0      2023-05-30 [1] CRAN (R 4.3.1)\n crayon              1.5.2      2022-09-29 [1] CRAN (R 4.3.1)\n crosstalk           1.2.0      2021-11-04 [1] CRAN (R 4.3.1)\n curl                5.0.2      2023-08-14 [1] CRAN (R 4.3.1)\n data.table          1.14.8     2023-02-17 [1] CRAN (R 4.3.1)\n DBI                 1.1.3      2022-06-18 [1] CRAN (R 4.3.1)\n desc                1.4.2      2022-09-08 [1] CRAN (R 4.3.1)\n details             0.3.0      2022-03-27 [1] CRAN (R 4.3.2)\n dichromat           2.0-0.1    2022-05-02 [1] CRAN (R 4.3.0)\n digest              0.6.33     2023-07-07 [1] CRAN (R 4.3.1)\n dplyr             * 1.1.3      2023-09-03 [1] CRAN (R 4.3.1)\n e1071               1.7-13     2023-02-01 [1] CRAN (R 4.3.1)\n ellipsis            0.3.2      2021-04-29 [1] CRAN (R 4.3.1)\n eurostat          * 3.8.2      2023-03-06 [1] CRAN (R 4.3.1)\n evaluate            0.23       2023-11-01 [1] CRAN (R 4.3.2)\n fansi               1.0.4      2023-01-22 [1] CRAN (R 4.3.1)\n farver              2.1.1      2022-07-06 [1] CRAN (R 4.3.1)\n fastmap             1.1.1      2023-02-24 [1] CRAN (R 4.3.1)\n fontawesome         0.5.2      2023-08-19 [1] CRAN (R 4.3.1)\n forcats           * 1.0.0      2023-01-29 [1] CRAN (R 4.3.1)\n gapminder         * 1.0.0      2023-03-10 [1] CRAN (R 4.3.1)\n generics            0.1.3      2022-07-05 [1] CRAN (R 4.3.1)\n gganimate         * 1.0.8      2022-09-08 [1] CRAN (R 4.3.2)\n ggbump            * 0.1.0      2020-04-24 [1] CRAN (R 4.3.2)\n ggmap             * 4.0.0      2023-11-19 [1] CRAN (R 4.3.2)\n ggplot2           * 3.4.4      2023-10-12 [1] CRAN (R 4.3.2)\n ggrepel           * 0.9.4      2023-10-13 [1] CRAN (R 4.3.1)\n ggthemes          * 4.2.4      2021-01-20 [1] CRAN (R 4.3.1)\n glue                1.6.2      2022-02-24 [1] CRAN (R 4.3.1)\n gt                * 0.9.0      2023-03-31 [1] CRAN (R 4.3.1)\n gtable              0.3.4      2023-08-21 [1] CRAN (R 4.3.1)\n gtExtras          * 0.5.0      2023-09-15 [1] CRAN (R 4.3.1)\n gtsummary         * 1.7.2      2023-07-15 [1] CRAN (R 4.3.2)\n here                1.0.1      2020-12-13 [1] CRAN (R 4.3.1)\n hms                 1.1.3      2023-03-21 [1] CRAN (R 4.3.1)\n htmltools           0.5.7      2023-11-03 [1] CRAN (R 4.3.2)\n htmlwidgets         1.6.3      2023-11-22 [1] CRAN (R 4.3.2)\n httr                1.4.7      2023-08-15 [1] CRAN (R 4.3.1)\n ISOweek             0.6-2      2011-09-07 [1] CRAN (R 4.3.1)\n janitor             2.2.0      2023-02-02 [1] CRAN (R 4.3.1)\n jpeg                0.1-10     2022-11-29 [1] CRAN (R 4.3.0)\n jsonlite            1.8.7      2023-06-29 [1] CRAN (R 4.3.1)\n KernSmooth          2.23-21    2023-05-03 [1] CRAN (R 4.3.1)\n knitr               1.45       2023-10-30 [1] CRAN (R 4.3.2)\n labeling            0.4.3      2023-08-29 [1] CRAN (R 4.3.1)\n lattice             0.21-8     2023-04-05 [1] CRAN (R 4.3.1)\n lazyeval            0.2.2      2019-03-15 [1] CRAN (R 4.3.1)\n leafem              0.2.3      2023-09-17 [1] CRAN (R 4.3.1)\n leaflet             2.2.0      2023-08-31 [1] CRAN (R 4.3.1)\n leafsync            0.1.0      2019-03-05 [1] CRAN (R 4.3.1)\n lifecycle           1.0.4      2023-11-07 [1] CRAN (R 4.3.2)\n lubridate         * 1.9.3      2023-09-27 [1] CRAN (R 4.3.2)\n lwgeom              0.2-13     2023-05-22 [1] CRAN (R 4.3.1)\n magick            * 2.8.1      2023-10-22 [1] CRAN (R 4.3.1)\n magrittr            2.0.3      2022-03-30 [1] CRAN (R 4.3.1)\n mapSpain          * 0.8.0      2023-07-12 [1] CRAN (R 4.3.2)\n markdown            1.11       2023-10-19 [1] CRAN (R 4.3.2)\n memoise             2.0.1      2021-11-26 [1] CRAN (R 4.3.1)\n munsell             0.5.0      2018-06-12 [1] CRAN (R 4.3.1)\n naniar            * 1.0.0      2023-02-02 [1] CRAN (R 4.3.1)\n paletteer           1.5.0      2022-10-19 [1] CRAN (R 4.3.1)\n patchwork         * 1.1.3      2023-08-14 [1] CRAN (R 4.3.1)\n pillar              1.9.0      2023-03-22 [1] CRAN (R 4.3.1)\n pjpv.curso.R.2022   0.0.0.9000 2023-11-29 [1] Github (perezp44/pjpv.curso.R.2022@bd4dd73)\n pkgconfig           2.0.3      2019-09-22 [1] CRAN (R 4.3.1)\n plotly            * 4.10.2     2023-06-03 [1] CRAN (R 4.3.1)\n plyr              * 1.8.8      2022-11-11 [1] CRAN (R 4.3.1)\n png                 0.1-8      2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits         1.1.1      2020-01-24 [1] CRAN (R 4.3.1)\n progress            1.2.2      2019-05-16 [1] CRAN (R 4.3.1)\n proxy               0.4-27     2022-06-09 [1] CRAN (R 4.3.1)\n purrr             * 1.0.2      2023-08-10 [1] CRAN (R 4.3.1)\n pxR               * 0.42.7     2022-11-23 [1] CRAN (R 4.3.2)\n R.methodsS3         1.8.2      2022-06-13 [1] CRAN (R 4.3.0)\n R.oo                1.25.0     2022-06-12 [1] CRAN (R 4.3.0)\n R.utils             2.12.2     2022-11-11 [1] CRAN (R 4.3.1)\n R6                  2.5.1      2021-08-19 [1] CRAN (R 4.3.1)\n raster              3.6-23     2023-07-04 [1] CRAN (R 4.3.1)\n RColorBrewer        1.1-3      2022-04-03 [1] CRAN (R 4.3.0)\n Rcpp                1.0.11     2023-07-06 [1] CRAN (R 4.3.1)\n readr             * 2.1.4      2023-02-10 [1] CRAN (R 4.3.1)\n readxl            * 1.4.3      2023-07-06 [1] CRAN (R 4.3.1)\n RefManageR          1.4.0      2022-09-30 [1] CRAN (R 4.3.1)\n regions             0.1.8      2021-06-21 [1] CRAN (R 4.3.1)\n rematch2            2.1.2      2020-05-01 [1] CRAN (R 4.3.1)\n reshape2          * 1.4.4      2020-04-09 [1] CRAN (R 4.3.1)\n rio                 1.0.1      2023-09-19 [1] CRAN (R 4.3.1)\n RJSONIO           * 1.3-1.9    2023-11-27 [1] CRAN (R 4.3.2)\n rlang               1.1.1      2023-04-28 [1] CRAN (R 4.3.1)\n rmarkdown           2.25       2023-09-18 [1] CRAN (R 4.3.2)\n rprojroot           2.0.3      2022-04-02 [1] CRAN (R 4.3.1)\n rstudioapi          0.15.0     2023-07-07 [1] CRAN (R 4.3.1)\n s2                  1.1.4      2023-05-17 [1] CRAN (R 4.3.1)\n sass                0.4.7      2023-07-15 [1] CRAN (R 4.3.1)\n scales              1.2.1      2022-08-20 [1] CRAN (R 4.3.2)\n sessioninfo         1.2.2      2021-12-06 [1] CRAN (R 4.3.2)\n sf                * 1.0-14     2023-07-11 [1] CRAN (R 4.3.1)\n snakecase           0.11.1     2023-08-27 [1] CRAN (R 4.3.1)\n sp                  2.0-0      2023-06-22 [1] CRAN (R 4.3.1)\n stars               0.6-4      2023-09-11 [1] CRAN (R 4.3.1)\n stringi             1.7.12     2023-01-11 [1] CRAN (R 4.3.0)\n stringr           * 1.5.0      2022-12-02 [1] CRAN (R 4.3.1)\n terra               1.7-46     2023-09-06 [1] CRAN (R 4.3.1)\n tibble            * 3.2.1      2023-03-20 [1] CRAN (R 4.3.1)\n tidyr             * 1.3.0      2023-01-24 [1] CRAN (R 4.3.1)\n tidyselect          1.2.0      2022-10-10 [1] CRAN (R 4.3.1)\n tidyverse         * 2.0.0      2023-02-22 [1] CRAN (R 4.3.1)\n timechange          0.2.0      2023-01-11 [1] CRAN (R 4.3.1)\n tmap              * 3.3-4      2023-09-12 [1] CRAN (R 4.3.1)\n tmaptools           3.1-1      2021-01-19 [1] CRAN (R 4.3.1)\n tweenr              2.0.2      2022-09-06 [1] CRAN (R 4.3.1)\n tzdb                0.4.0      2023-05-12 [1] CRAN (R 4.3.1)\n units               0.8-4      2023-09-13 [1] CRAN (R 4.3.1)\n utf8                1.2.3      2023-01-31 [1] CRAN (R 4.3.1)\n vctrs               0.6.3      2023-06-14 [1] CRAN (R 4.3.1)\n vembedr           * 0.1.5      2021-12-11 [1] CRAN (R 4.3.2)\n viridisLite         0.4.2      2023-05-02 [1] CRAN (R 4.3.1)\n visdat              0.6.0      2023-02-02 [1] CRAN (R 4.3.1)\n withr               2.5.2      2023-10-30 [1] CRAN (R 4.3.2)\n wk                  0.8.0      2023-08-25 [1] CRAN (R 4.3.1)\n xfun                0.40       2023-08-09 [1] CRAN (R 4.3.1)\n XML                 3.99-0.14  2023-03-19 [1] CRAN (R 4.3.0)\n xml2                1.3.5      2023-07-06 [1] CRAN (R 4.3.1)\n yaml                2.3.7      2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] C:/Users/Manu/AppData/Local/Programs/R/R-4.3.1/library\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Análisis general de las regiones españolas",
    "section": "",
    "text": "Hola, somos Ángel, Aarón y Manu\nEsta web sirve para presentar el trabajo en equipo para la asignatura “Programación y manejo de datos en la era Del Big Data”, optativa de GECO en la Facultad de Economía de la Universitat de València.\nLa web de la asignatura está aquí y los trabajos de mis compañeros de curso puedes verlos aquí.\nNuestro trabajo lleva por título : “Análisis general de las regiones españolas”. El objetivo es tener una vision general de varios aspectos económicos, demográficos e incluso sociales y ver las diferencias que hay entre las distintas regiones y ya de paso, nos da la posibilidad de practicar con distintos tipos de graficos jeje\nEl trabajo puede verse aquí, y las slides aquí."
  },
  {
    "objectID": "my_slides_BigData.html#índice",
    "href": "my_slides_BigData.html#índice",
    "title": "Análisis general de las regiones de España",
    "section": "Índice",
    "text": "Índice\n\nIntroducción\nDatos\nPoblación\nEconomía"
  },
  {
    "objectID": "my_slides_BigData.html#introducción",
    "href": "my_slides_BigData.html#introducción",
    "title": "Análisis general de las regiones de España",
    "section": "1. Introducción",
    "text": "1. Introducción\nEn la asignatura “Programación y manejo de datos en la era del Big Data”, debíamos crear dos trabajos distintos: Uno por equipos y uno grupal para así mostrar lo aprendido durante todo el año.\nComo el tema era completamente libre, nosotros elegimos un tema muy general como es el análisis de las regiones de España y asi poder sacar datos de cualquier idea que se nos pasase en ese momento por la cabeza.\nEl trabajo lo hemos dividido en 2 partes:\nLa primera consta sobre la demografía Española, viendo las diferencias de población entre los hombres y mujeres, los diferentes rangos de edad y las provincias mas pobladas.\nLa segunda parte ya es relacionada con la economía española, ya que hablaremos sobre el PiB nominal, la diferencia salarial entre hombres y mujeres, como se distribuye el trabajo y la pobreza en España."
  },
  {
    "objectID": "my_slides_BigData.html#datos",
    "href": "my_slides_BigData.html#datos",
    "title": "Análisis general de las regiones de España",
    "section": "2. Datos",
    "text": "2. Datos\nPara los datos, empezamos cogiéndolos del Kaggle pero la forma con la que se descargaban y/o se abrían no era la correcta para nuestro nivel de R. Es por eso, que decidimos pasar a datos del INE y aunque al inicio nos costaba un poco abrir los datos de la forma correcta, vimos una forma de descargar los datos llamada PC.Axis. Esta a través del paquete pxR, nos abría los datos directamente en el R studio con el formato adecuado y bien estructuradas las columnas. También estaba la forma de descargarlos por CSV o por Excel, y aunque esta forma está dada en clase, la forma en la que se detectaban las variables nos hacía imposible el poder usar algunas columnas de forma numérica, asi que recomendamos el uso de PC.Axis.\nLos datos se pueden cargar en la memoria de de R/RStudio de esta forma:"
  },
  {
    "objectID": "my_slides_BigData.html#población",
    "href": "my_slides_BigData.html#población",
    "title": "Análisis general de las regiones de España",
    "section": "3. Población",
    "text": "3. Población"
  },
  {
    "objectID": "my_slides_BigData.html#población-por-ccaa",
    "href": "my_slides_BigData.html#población-por-ccaa",
    "title": "Análisis general de las regiones de España",
    "section": "3.1. Población por CCAA",
    "text": "3.1. Población por CCAA\nAquí observamos un gráfico animado de lineas sobre la evolución de la población de España por comunidades autónomas desde 1996 hasta 2020."
  },
  {
    "objectID": "my_slides_BigData.html#mujeres-vs-hombres",
    "href": "my_slides_BigData.html#mujeres-vs-hombres",
    "title": "Análisis general de las regiones de España",
    "section": "3.2. Mujeres vs Hombres",
    "text": "3.2. Mujeres vs Hombres\nEn este gráfico representamos la población española por grupos de edad y sexo por miles de habitantes."
  },
  {
    "objectID": "my_slides_BigData.html#provincias-mas-pobladas-2020",
    "href": "my_slides_BigData.html#provincias-mas-pobladas-2020",
    "title": "Análisis general de las regiones de España",
    "section": "3.3. Provincias mas pobladas 2020",
    "text": "3.3. Provincias mas pobladas 2020\nEste gráfico circular nos muestra las 10 provincias más pobladas de España en 2020."
  },
  {
    "objectID": "my_slides_BigData.html#nacimientos-vs-defunciones",
    "href": "my_slides_BigData.html#nacimientos-vs-defunciones",
    "title": "Análisis general de las regiones de España",
    "section": "3.4. Nacimientos vs Defunciones",
    "text": "3.4. Nacimientos vs Defunciones\nVamos a comparar la población que nace y la población que muere cada año y luego ver si el saldo es positivo o negativo."
  },
  {
    "objectID": "my_slides_BigData.html#saldo-vegetativo",
    "href": "my_slides_BigData.html#saldo-vegetativo",
    "title": "Análisis general de las regiones de España",
    "section": "3.5. Saldo Vegetativo",
    "text": "3.5. Saldo Vegetativo"
  },
  {
    "objectID": "my_slides_BigData.html#mapa-de-suicidios",
    "href": "my_slides_BigData.html#mapa-de-suicidios",
    "title": "Análisis general de las regiones de España",
    "section": "3.6. Mapa de suicidios",
    "text": "3.6. Mapa de suicidios\nEn estos mapas conjuntos representamos la tasa de suicidio por cada 100.000 habitantes clasificados por varios años y comunidades."
  },
  {
    "objectID": "my_slides_BigData.html#economía",
    "href": "my_slides_BigData.html#economía",
    "title": "Análisis general de las regiones de España",
    "section": "4. Economía",
    "text": "4. Economía"
  },
  {
    "objectID": "my_slides_BigData.html#pib-nominal-españa",
    "href": "my_slides_BigData.html#pib-nominal-españa",
    "title": "Análisis general de las regiones de España",
    "section": "4.1. PIB nominal España",
    "text": "4.1. PIB nominal España\nAquí vemos una visión general del PIB Nominal por comunidades."
  },
  {
    "objectID": "my_slides_BigData.html#población-activa-por-sectores",
    "href": "my_slides_BigData.html#población-activa-por-sectores",
    "title": "Análisis general de las regiones de España",
    "section": "4.2. Población activa por sectores",
    "text": "4.2. Población activa por sectores\nEn este caso vamos a ver cómo se divide la población en activo Española a través de 4 sectores distintos más el porcentaje de parados por año. Lo veremos a través de 4 años distintos con un gráfico circular."
  },
  {
    "objectID": "my_slides_BigData.html#salario-medio-ccaa",
    "href": "my_slides_BigData.html#salario-medio-ccaa",
    "title": "Análisis general de las regiones de España",
    "section": "4.3. Salario medio CCAA",
    "text": "4.3. Salario medio CCAA\nEl siguiente gráfico de barras animado nos muestra la distribución salarial en España por comunidades autónomas desde 2006 hasta 2022."
  },
  {
    "objectID": "my_slides_BigData.html#salario-ccaa-2022",
    "href": "my_slides_BigData.html#salario-ccaa-2022",
    "title": "Análisis general de las regiones de España",
    "section": "4.4. Salario CCAA 2022",
    "text": "4.4. Salario CCAA 2022\nAquí os dejo un gráfico de barras medio bonito de la distribución salarial en España por CCAA, pero solo de 2022. Al ser el otro en movimiento, dejo este estático con los resultados de 2022 que entiendo que son los más interesantes y actuales."
  },
  {
    "objectID": "my_slides_BigData.html#hombres-vs-mujeres",
    "href": "my_slides_BigData.html#hombres-vs-mujeres",
    "title": "Análisis general de las regiones de España",
    "section": "4.5. HOMBRES vs MUJERES",
    "text": "4.5. HOMBRES vs MUJERES\nEste es un gráfico de lineas interactivo comparando la media salarial en España entre hombres y mujeres."
  },
  {
    "objectID": "my_slides_BigData.html#tasa-de-pobreza",
    "href": "my_slides_BigData.html#tasa-de-pobreza",
    "title": "Análisis general de las regiones de España",
    "section": "4.6. Tasa de pobreza",
    "text": "4.6. Tasa de pobreza\nAquí lo que hemos hecho es un gráfico donde aparece la evolución de la tasa de pobreza de ciertas comunidades, hemos elegido las comunidades con mayor tasa y las que menos (aunque realmente no ha sido tan así, hemos cogido las que nos venían bien para que quedase chulo en el gráfico)."
  },
  {
    "objectID": "my_slides_BigData.html#grafico-de-lineas-pobreza",
    "href": "my_slides_BigData.html#grafico-de-lineas-pobreza",
    "title": "Análisis general de las regiones de España",
    "section": "4.7. Grafico de Lineas Pobreza",
    "text": "4.7. Grafico de Lineas Pobreza\nEn esta tabla se representa la tasa de pobreza de todas las comunidades en el año 2022 para así tener una idea a primera vista de cómo se distribuye.\n\n\n\n\n\n\n  \n    \n      Tasa de pobreza 2022\n    \n    \n      renta del año anterior a la entrevista\n    \n    \n      Periodo\n      ine_ccaa.n\n      value\n    \n  \n  \n    2022\n\n  \n    Extremadura\n    \n    \n  \n  \n    \n  \n\n30.0\n    2022\n\n  \n    Canarias\n    \n    \n  \n  \n    \n  \n\n29.4\n    2022\n\n  \n    Andalucía\n    \n    \n  \n  \n    \n  \n\n29.1\n    2022\n\n  \n    Murcia, Región de\n    \n    \n  \n  \n    \n  \n\n26.3\n    2022\n\n  \n    Castilla - La Mancha\n    \n    \n  \n  \n    \n  \n\n26.1\n    2022\n\n  \n    Comunitat Valenciana\n    \n    \n  \n  \n    \n  \n\n22.3\n    2022\n\n  \n    Asturias, Principado de\n    \n    \n  \n  \n    \n  \n\n20.1\n    2022\n\n  \n    Galicia\n    \n    \n  \n  \n    \n  \n\n18.0\n    2022\n\n  \n    Castilla y León\n    \n    \n  \n  \n    \n  \n\n17.8\n    2022\n\n  \n    Balears, Illes\n    \n    \n  \n  \n    \n  \n\n16.9\n    2022\n\n  \n    Rioja, La\n    \n    \n  \n  \n    \n  \n\n16.6\n    2022\n\n  \n    Aragón\n    \n    \n  \n  \n    \n  \n\n15.0\n    2022\n\n  \n    Cantabria\n    \n    \n  \n  \n    \n  \n\n14.8\n    2022\n\n  \n    Madrid, Comunidad de\n    \n    \n  \n  \n    \n  \n\n14.8\n    2022\n\n  \n    Cataluña\n    \n    \n  \n  \n    \n  \n\n14.5\n    2022\n\n  \n    País Vasco\n    \n    \n  \n  \n    \n  \n\n12.2\n    2022\n\n  \n    Navarra, Comunidad Foral de\n    \n    \n  \n  \n    \n  \n\n10.9"
  },
  {
    "objectID": "my_slides_BigData.html#precio-de-la-vivienda",
    "href": "my_slides_BigData.html#precio-de-la-vivienda",
    "title": "Análisis general de las regiones de España",
    "section": "4.8. Precio de la vivienda",
    "text": "4.8. Precio de la vivienda\nEste gráfico representa el precio de las viviendas por comunidades a lo largo del tiempo con base en el año 2015, como podemos ver en estas comunidades, los precios de la vivienda se están acercando mucho a los de la burbuja de 2008, sobre todo en las comunidades más urbanas."
  },
  {
    "objectID": "my_slides_BigData.html#turismo-vinculado-a-españa",
    "href": "my_slides_BigData.html#turismo-vinculado-a-españa",
    "title": "Análisis general de las regiones de España",
    "section": "3.9. Turismo vinculado a España",
    "text": "3.9. Turismo vinculado a España\nPara terminar el trabajo, vamos a ver una tabla sobre el turismo que se mueve en España. En ella tenemos 3 filas y 20 columnas donde se explicara como es el movimiento y si estos se quedan a pernoctar o no.\n\n\n\n\n\n\n  \n    \n      Estructura del turismo de España\n    \n    \n      Tenemos en cuenta todos los movimientos vinculados a España\n    \n    \n      Tipo de visitante\n      Tipo de viaje\n      \n        2021\n      \n      \n        2020\n      \n      \n        2019\n      \n      \n        2018\n      \n      \n        2017\n      \n      \n        2016\n      \n    \n    \n      Turismo Receptor1\n      Turismo Interno1\n      Turismo Emisor1\n      Turismo Receptor2\n      Turismo Interno2\n      Turismo Emisor2\n      Turismo Receptor3\n      Turismo Interno3\n      Turismo Emisor3\n      Turismo Receptor4\n      Turismo Interno4\n      Turismo Emisor4\n      Turismo Receptor5\n      Turismo Interno5\n      Turismo Emisor5\n      Turismo Receptor6\n      Turismo Interno6\n      Turismo Emisor6\n    \n  \n  \n    Turistas\nNúmero de viajes\n 31.180.802\n135.687.709\n  7.205.752\n 18.933.103\n 96.449.394\n  5.074.468\n 83.509.153\n173.754.971\n 20.119.745\n 82.808.413\n176.772.352\n 19.307.118\n 81.868.522\n176.399.801\n 17.289.487\n 75.315.008\n166.218.791\n 15.732.052\n    Excursionistas\nNúmero de viajes\n 20.450.574\n212.971.415\n  1.525.163\n 17.476.868\n160.339.793\n  1.295.822\n 42.660.933\n257.619.303\n  2.971.256\n 41.647.253\n278.190.668\n  3.255.321\n 39.848.764\n280.332.355\n  3.242.631\n 40.246.069\n238.195.864\n  2.872.100\n    Turistas\nNúmero de pernoctaciones\n253.985.281\n557.278.462\n 68.893.926\n147.986.129\n450.689.308\n 42.719.916\n594.017.856\n649.516.399\n144.391.738\n616.714.999\n644.365.970\n151.773.267\n633.696.886\n660.794.364\n141.154.479\n593.417.445\n643.050.482\n137.274.029\n  \n  \n    \n      Fuente: datos de INE\n    \n    \n      Obtenidos a partir del paquete pxR\n    \n  \n  \n\n\n\n\n\n\nSlides hechas con Quarto"
  }
]